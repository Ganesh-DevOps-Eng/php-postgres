trigger:
  branches:
    include:
      - main  # or your preferred branch

pool:
  #vmImage: 'ubuntu-latest'  # You can also specify windows-latest if required
  name: 'devops-vmss'

# Initial setup (Run once)
steps:
- script: |
    sudo apt update -y
    sudo apt install apache2 -y
    sudo apt install postgresql-client -y
    sudo apt install php libapache2-mod-php php-pgsql -y
    sudo apt install curl php-cli php-mbstring unzip -y

    # Install Composer
    curl -sS https://getcomposer.org/installer | php
    sudo mv composer.phar /usr/local/bin/composer

    # Import database
    PGPASSWORD=H@Sh1CoR3! psql -h tom-psqlserver.postgres.database.azure.com -U psqladmin@tom-psqlserver -d postgres -f db.sql

    # Configure Apache
    echo "RewriteEngine On" | sudo tee -a /var/www/html/.htaccess
    echo "RewriteRule ^health$ health.php [L]" | sudo tee -a /var/www/html/.htaccess
    sudo chown www-data:www-data /var/www/html/*
    sudo chmod 644 /var/www/html/*

    # Update Apache configuration to allow overrides
    sudo bash -c 'cat <<EOT >> /etc/apache2/sites-available/000-default.conf
    <Directory /var/www/html>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>
    EOT'

    # Mark setup as completed (create a file to indicate setup has been done)
    sudo touch /home/adminuser/.setup_done
  displayName: 'Initial Setup (Run Once)'
  condition: and(succeeded(), not(fileExists('/home/adminuser/.setup_done')))

# Code deployment (Run on every commit)
- script: |
    cd /home/adminuser
    rm -rf *
    git pull https://github.com/Ganesh-DevOps-Eng/php-postgres.git
    cd php-postgres/
    ln -s /home/adminuser/php-postgres/  /var/www/html/
    sudo chown www-data:www-data /var/www/html/*
    sudo chmod 644 /var/www/html/*

    # Install Composer dependencies
    yes | sudo composer require vlucas/phpdotenv
    yes | sudo composer install

    # Restart Apache
    sudo systemctl restart apache2
  displayName: 'Deploy to VM'
